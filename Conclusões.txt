Conclusões:

Sem otimização, o código em assembly usa diferentes áreas de memória temporárias para armazenar as variáveis e seus endereços. Usa os registradores para transferir dados de uma área de memória para outra.

Quando o código usa as otimizações, ele cria um código assembly que usa só registradores como armazenadores temporários dos valores das variáveis e seus endereços.

Com a otimização economiza-se o tempo de transferir o dado do registrador pra outra área de memória, deixando o dado no registrador.

Cada variável auxiliar criada no código, faz com que uma diferente área de memória seja usada temporariamente.
Então, no caso sem otimização, seria melhor programar em C a função decode com apenas uma variável auxiliar.
Já com otimização, programar em C de um jeito ou de outro não faz diferença no código assembly gerado pelo compilador.
